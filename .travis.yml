language: cpp
sudo: false

cache:
  ccache: true
  directories:
    - $HOME/.ccache

env:
  global:
    - USE_CCACHE=1
    - CCACHE_COMPRESS=1
    - CCACHE_MAXSIZE=200M
    - CCACHE_CPP2=1

# Build matrix taken from https://github.com/philsquared/Catch
matrix:
  include:
    # 1/ Linux Clang Builds
    - os: linux
      compiler: clang
      addons: &clang35
        apt:
          sources: ['llvm-toolchain-precise-3.5', 'ubuntu-toolchain-r-test']
          packages: ['clang-3.5']
      env: COMPILER='ccache clang++-3.5' BUILD_TYPE='Release'

    - os: linux
      compiler: clang
      addons: *clang35
      env: COMPILER='ccache clang++-3.5' BUILD_TYPE='Debug'


    - os: linux
      compiler: clang
      addons: &clang36
        apt:
          sources: ['llvm-toolchain-precise-3.6', 'ubuntu-toolchain-r-test']
          packages: ['clang-3.6']
      env: COMPILER='ccache clang++-3.6' BUILD_TYPE='Release'

    - os: linux
      compiler: clang
      addons: *clang36
      env: COMPILER='ccache clang++-3.6' BUILD_TYPE='Debug'


    - os: linux
      compiler: clang
      addons: &clang37
        apt:
          sources: ['llvm-toolchain-precise-3.7', 'ubuntu-toolchain-r-test']
          packages: ['clang-3.7']
      env: COMPILER='ccache clang++-3.7' BUILD_TYPE='Release'

    - os: linux
      compiler: clang
      addons: *clang37
      env: COMPILER='ccache clang++-3.7' BUILD_TYPE='Debug'


    - os: linux
      compiler: clang
      addons: &clang38
        apt:
          sources: ['llvm-toolchain-precise', 'ubuntu-toolchain-r-test']
          packages: ['clang-3.8']
      env: COMPILER='ccache clang++-3.8' BUILD_TYPE='Release'

    - os: linux
      compiler: clang
      addons: *clang38
      env: COMPILER='ccache clang++-3.8' BUILD_TYPE='Debug'


    # 2/ Linux GCC Builds
    - os: linux
      compiler: gcc
      addons: &gcc48
        apt:
         sources: ['ubuntu-toolchain-r-test']
         packages: ['g++-4.8']
      env: COMPILER='ccache g++-4.8' BUILD_TYPE='Release'

    - os: linux
      compiler: gcc
      addons: *gcc48
      env: COMPILER='ccache g++-4.8' BUILD_TYPE='Debug'


    - os: linux
      compiler: gcc
      addons: &gcc49
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-4.9']
      env: COMPILER='ccache g++-4.9' BUILD_TYPE='Release'

    - os: linux
      compiler: gcc
      addons: *gcc49
      env: COMPILER='ccache g++-4.9' BUILD_TYPE='Debug'


    - os: linux
      compiler: gcc
      addons: &gcc5
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-5']
      env: COMPILER='ccache g++-5' BUILD_TYPE='Release'

    - os: linux
      compiler: gcc
      addons: *gcc5
      env: COMPILER='ccache g++-5' BUILD_TYPE='Debug'


    # 3/ OSX Clang Builds
    - os: osx
      osx_image: xcode6.4
      compiler: clang
      env: COMPILER='ccache clang++' BUILD_TYPE='Debug'

    - os: osx
      osx_image: xcode6.4
      compiler: clang
      env: COMPILER='ccache clang++' BUILD_TYPE='Release'


    - os: osx
      osx_image: xcode7
      compiler: clang
      env: COMPILER='ccache clang++' BUILD_TYPE='Debug'

    - os: osx
      osx_image: xcode7
      compiler: clang
      env: COMPILER='ccache clang++' BUILD_TYPE='Release'

  allow_failures:
    - os: osx

install:
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}
  - |
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then 
      CMAKE_URL="http://www.cmake.org/files/v3.3/cmake-3.3.2-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    elif [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
      brew install cmake ccache
    fi

before_script:
  - cd ${TRAVIS_BUILD_DIR}
  - cmake . -Bbuild -DCMAKE_BUILD_TYPE=${BUILD_TYPE}
  - cd build

script:
  - make -j 2
  - ctest -V -j 2

notifications:
  email: false
  slack:
    secure: eWomj3OJ9UtPP4/jGYQ2o+vbRQMpZmY2Tug+Og+17W73A+ldCmxNeYmHXKP++pEvhaeOaI8qBbmq8PBvbv3YZS4Uj3TGwOjZPJemFFVYoOHrcRjiybTlLrJDXeUHEfKgNuNs5Z/R8FvP03VDkVHlwJwxNRfUcIc0yUS0HTAE9dAt51FWRW1e64epzxy5XaChAOBplerjV7Nd3R8sdeAN8NOsOIbBxJBY30sFLb2mzDFsLl61Ah35HfgDLN5+mM4CUG6QhZTwFFDF+oyDvqSslwx+3FOLQ43XB98fDyRjzzgFWyIsktNmDpNu96wsyguD1fetfZAFRnqci5TCNHXWv4OGAOCRX4TnJVMBoPY4HACIQ06ww+V5B2UpWD0fMmW7P8lIP+WBpYDoyf2VrOZ9LLBzHOKo8zkCZ7JIbMWS9wew4IYtjNTxZ4jBAfdAwJlKgb0OPLpUPT7h5P71dQncrvarQTRMSvbqnJN6hwOtHtRsBYHhPPs2SVqIY9CUdbgV4xI78l9Cy/4os2o7opO9sf5S0vHp3PvgFNW+66QOxBSBANKNVSgGwBr8KKcDDPPZ9umh9jDfaKpuca/g8QMVTIwQ602tOOkH1mwjP0llBaqtF1rij1DmgrcQL6imufWtAQgv/XMaLZfVBnjii0s9lraBdJKtaB4/Sn6uefX354Y=
