language: cpp
sudo: true

cache:
  ccache: true
  directories:
  - "$HOME/.ccache"

env:
  global:
  - USE_CCACHE=1
  - CCACHE_COMPRESS=1
  - CCACHE_MAXSIZE=200M
  - CCACHE_CPP2=1

matrix:
  include:
  - os: linux
    compiler: clang
    addons: &1
      apt:
        sources:
        - llvm-toolchain-precise-3.5
        - ubuntu-toolchain-r-test
        packages:
        - clang-3.5
    env: COMPILER='ccache clang++-3.5' BUILD_TYPE='Release'
  - os: linux
    compiler: clang
    addons: *1
    env: COMPILER='ccache clang++-3.5' BUILD_TYPE='Debug'
  - os: linux
    compiler: clang
    addons: &2
      apt:
        sources:
        - llvm-toolchain-precise-3.6
        - ubuntu-toolchain-r-test
        packages:
        - clang-3.6
    env: COMPILER='ccache clang++-3.6' BUILD_TYPE='Release'
  - os: linux
    compiler: clang
    addons: *2
    env: COMPILER='ccache clang++-3.6' BUILD_TYPE='Debug'
  - os: linux
    compiler: clang
    addons: &3
      apt:
        sources:
        - llvm-toolchain-precise-3.7
        - ubuntu-toolchain-r-test
        packages:
        - clang-3.7
    env: COMPILER='ccache clang++-3.7' BUILD_TYPE='Release'
  - os: linux
    compiler: clang
    addons: *3
    env: COMPILER='ccache clang++-3.7' BUILD_TYPE='Debug'
  - os: linux
    compiler: clang
    addons: &4
      apt:
        sources:
        - llvm-toolchain-precise
        - ubuntu-toolchain-r-test
        packages:
        - clang-3.8
    env: COMPILER='ccache clang++-3.8' BUILD_TYPE='Release'
  - os: linux
    compiler: clang
    addons: *4
    env: COMPILER='ccache clang++-3.8' BUILD_TYPE='Debug'
  - os: linux
    compiler: gcc
    addons: &5
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - g++-4.8
    env: COMPILER='ccache g++-4.8' BUILD_TYPE='Release'
  - os: linux
    compiler: gcc
    addons: *5
    env: COMPILER='ccache g++-4.8' BUILD_TYPE='Debug'
  - os: linux
    compiler: gcc
    addons: &6
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - g++-4.9
    env: COMPILER='ccache g++-4.9' BUILD_TYPE='Release'
  - os: linux
    compiler: gcc
    addons: *6
    env: COMPILER='ccache g++-4.9' BUILD_TYPE='Debug'
  - os: linux
    compiler: gcc
    addons: &7
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - g++-5
    env: COMPILER='ccache g++-5' BUILD_TYPE='Release'
  - os: linux
    compiler: gcc
    addons: *7
    env: COMPILER='ccache g++-5' BUILD_TYPE='Debug'
  - os: osx
    osx_image: xcode6.4
    compiler: clang
    env: COMPILER='ccache clang++' BUILD_TYPE='Debug'
  - os: osx
    osx_image: xcode6.4
    compiler: clang
    env: COMPILER='ccache clang++' BUILD_TYPE='Release'
  - os: osx
    osx_image: xcode7
    compiler: clang
    env: COMPILER='ccache clang++' BUILD_TYPE='Debug'
  - os: osx
    osx_image: xcode7
    compiler: clang
    env: COMPILER='ccache clang++' BUILD_TYPE='Release'
  allow_failures:
  - os: osx

before_install:
- openssl aes-256-cbc -K $encrypted_dc9ab2986818_key -iv $encrypted_dc9ab2986818_iv
  -in  config/travisci_rsa.enc -out config/travisci_rsa -d
- chmod 0600 config/travisci_rsa
- cp config/travisci_rsa ~/.ssh/id_rsa

install:
- DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
- mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}
- "if [[ \"$TRAVIS_OS_NAME\" == \"linux\" ]]; then \n wget --no-check-certificate
  http://cmake.org/files/v3.4/cmake-3.4.3-Linux-x86_64.tar.gz\n tar -xzf cmake-3.4.3-Linux-x86_64.tar.gz
  \n sudo apt-get install --yes doxygen graphviz \nelif [[ \"${TRAVIS_OS_NAME}\" ==
  \"osx\" ]]; then\n brew install cmake ccache doxygen graphviz\nfi\n"

before_script:
- export CXX=${COMPILER}
- "if [[ \"$TRAVIS_OS_NAME\" == \"linux\" ]]; then \n  export CMAKE_DIR=$(pwd)/cmake-3.4.3-Linux-x86_64/bin\n
  \ export PATH=${CMAKE_DIR}:${PATH}\nfi\n"
- cd ${TRAVIS_BUILD_DIR}
- cmake . -Bbuild -DCMAKE_BUILD_TYPE=${BUILD_TYPE}

script:
- cd build
- make -j 2
- ctest -V -j 2
- cd -

after_success:
- "./config/publish-doxygen.sh"

notifications:
  email: false
  slack:
    secure: eWomj3OJ9UtPP4/jGYQ2o+vbRQMpZmY2Tug+Og+17W73A+ldCmxNeYmHXKP++pEvhaeOaI8qBbmq8PBvbv3YZS4Uj3TGwOjZPJemFFVYoOHrcRjiybTlLrJDXeUHEfKgNuNs5Z/R8FvP03VDkVHlwJwxNRfUcIc0yUS0HTAE9dAt51FWRW1e64epzxy5XaChAOBplerjV7Nd3R8sdeAN8NOsOIbBxJBY30sFLb2mzDFsLl61Ah35HfgDLN5+mM4CUG6QhZTwFFDF+oyDvqSslwx+3FOLQ43XB98fDyRjzzgFWyIsktNmDpNu96wsyguD1fetfZAFRnqci5TCNHXWv4OGAOCRX4TnJVMBoPY4HACIQ06ww+V5B2UpWD0fMmW7P8lIP+WBpYDoyf2VrOZ9LLBzHOKo8zkCZ7JIbMWS9wew4IYtjNTxZ4jBAfdAwJlKgb0OPLpUPT7h5P71dQncrvarQTRMSvbqnJN6hwOtHtRsBYHhPPs2SVqIY9CUdbgV4xI78l9Cy/4os2o7opO9sf5S0vHp3PvgFNW+66QOxBSBANKNVSgGwBr8KKcDDPPZ9umh9jDfaKpuca/g8QMVTIwQ602tOOkH1mwjP0llBaqtF1rij1DmgrcQL6imufWtAQgv/XMaLZfVBnjii0s9lraBdJKtaB4/Sn6uefX354Y=
